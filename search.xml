<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world.html"/>
      <url>/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图片加载失败处理</title>
      <link href="/%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%A4%B1%E8%B4%A5%E5%A4%84%E7%90%86.html"/>
      <url>/%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%A4%B1%E8%B4%A5%E5%A4%84%E7%90%86.html</url>
      
        <content type="html"><![CDATA[<h1 id="图片加载失败处理-加载指定图片或默认图片"><a href="#图片加载失败处理-加载指定图片或默认图片" class="headerlink" title="图片加载失败处理 , 加载指定图片或默认图片"></a>图片加载失败处理 , 加载指定图片或默认图片</h1><p>当一项资源（如<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img" target="_blank" rel="noopener"><code>&lt;img&gt;</code></a>或<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script" target="_blank" rel="noopener"><code>&lt;script&gt;</code></a>）<strong>加载失败</strong>，加载资源的元素会触发一个<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Event" target="_blank" rel="noopener"><code>Event</code></a>接口的<code>error</code>事件，并执行该元素上的<code>onerror()</code>处理函数。这些error事件不会向上冒泡到window</p><p>因为 <code>error</code> 事件无法冒泡，但是事件传播只有冒泡一种方式么，还有捕获</p><p>查规范可知，<code>error</code> 事件是可以捕获的，那么就可以实现如下代码</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 图片加载失败模块</span></span><br><span class="line"><span class="keyword">let</span> imageList = &#123;</span><br><span class="line">  <span class="keyword">default</span>: <span class="string">"2.jpg"</span>,</span><br><span class="line">  offline: <span class="string">"base64图片地址"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 获取出错节点</span></span><br><span class="line">  <span class="keyword">let</span> &#123; target &#125; = e;</span><br><span class="line">  <span class="comment">// 获取出错节点类型 和自定义属性 (自定义属性data-xxx)</span></span><br><span class="line">  <span class="keyword">let</span> &#123; tagName, dataset &#125; = target;</span><br><span class="line">  <span class="comment">// 获取自定义属性 time(计数器) ,没有则默认为0</span></span><br><span class="line">  <span class="comment">// 当完全断网的时候，必然什么图片都无法加载，必然导致错误处理被无限触发，可以标记一个计数器，当达到期望的数值时停止继续请求，改为提供一个 Base64 的图片路径</span></span><br><span class="line">  <span class="comment">// data-placehoder 指定图片加载失败之后加载哪张图片</span></span><br><span class="line">  <span class="keyword">let</span> &#123; time = <span class="number">0</span>, placeholder &#125; = dataset;</span><br><span class="line">  <span class="comment">// 如果出错节点类型是img就修改src</span></span><br><span class="line">  <span class="keyword">if</span> (tagName === <span class="string">"IMG"</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (time &lt; <span class="number">3</span>) &#123;</span><br><span class="line">      <span class="comment">// 设置了placeholder 则加载指定图片, 否则加载默认图片</span></span><br><span class="line">      target.scr = imageList[placeholder || <span class="string">"default"</span>];</span><br><span class="line">      <span class="comment">// 加载失败次数+1</span></span><br><span class="line">      dataset.time = time + <span class="number">1</span>; </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 超过3次, 加载offline指定的base64图片</span></span><br><span class="line">      target.src = imageList[<span class="string">"offline"</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git-Notes</title>
      <link href="/Git-Notes.html"/>
      <url>/Git-Notes.html</url>
      
        <content type="html"><![CDATA[<h1 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载一个项目和它的整个代码历史</span></span><br><span class="line">$ git <span class="built_in">clone</span> [url]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有远程仓库</span></span><br><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure></div><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置文件增加一个新的远程仓库，并命名</span></span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件删除一个远程仓库</span></span><br><span class="line">$ git remote rm [shortname]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前的Git配置</span></span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑Git配置文件</span></span><br><span class="line">$ git config -e [--global]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置提交代码时的用户信息</span></span><br><span class="line">$ git config [--global] user.name <span class="string">"[name]"</span></span><br><span class="line">$ git config [--global] user.email <span class="string">"[email address]"</span></span><br></pre></td></tr></table></figure></div><h1 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加所有文件到暂存区</span></span><br><span class="line">$ git add .</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不删除工作空间改动代码，撤销commit，并且撤销git add . </span></span><br><span class="line">$ git reset --mixed </span><br><span class="line"></span><br><span class="line"><span class="comment"># 不删除工作空间改动代码，撤销commit，不撤销git add . </span></span><br><span class="line">$ git reset --soft</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除工作空间改动代码，撤销commit，撤销git add . (重置暂存区与工作区，与上一次commit保持一致)</span></span><br><span class="line">$ git reset --hard</span><br></pre></td></tr></table></figure></div><h1 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">$ git commit -m [message]</span><br></pre></td></tr></table></figure></div><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">$ git branch -r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有本地分支和远程分支</span></span><br><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前分支重命名</span></span><br><span class="line">$ git branch -m [name]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"><span class="comment"># 新的git switch命令</span></span><br><span class="line">$ git switch -c [branch-name]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定分支，并更新工作区</span></span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line">$ git switch [branch-name]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到上一个分支</span></span><br><span class="line">$ git checkout -</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">$ git push origin --delete [branch-name]</span><br></pre></td></tr></table></figure></div><h1 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示有变更的文件</span></span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure></div><h1 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h1><p>[remote]是远程服务仓库名字 , 未设置默认是 origin</p><p>[branch]是本地分支名字</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">$ git push [remote] --force</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure></div><h1 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h1><h2 id="删除-GitHub-中的所有提交历史记录"><a href="#删除-GitHub-中的所有提交历史记录" class="headerlink" title="删除 GitHub 中的所有提交历史记录"></a>删除 GitHub 中的所有提交历史记录</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建orphan分支,名为latest_branch</span></span><br><span class="line">$ git checkout --orphan latest_branch</span><br><span class="line"><span class="comment"># 2.添加所有文件</span></span><br><span class="line">$ git add -A</span><br><span class="line"><span class="comment"># 3.提交更改</span></span><br><span class="line">$ git commit -am <span class="string">"commit message"</span></span><br><span class="line"><span class="comment"># 4.删除分支</span></span><br><span class="line">$ git branch -D master</span><br><span class="line"><span class="comment"># 5.将当前分支重命名</span></span><br><span class="line">$ git branch -m master</span><br><span class="line"><span class="comment"># 6.最后，强制更新存储库</span></span><br><span class="line">$ git push -f origin master</span><br></pre></td></tr></table></figure></div><h2 id="删除暂存区或版本库中的文件"><a href="#删除暂存区或版本库中的文件" class="headerlink" title="删除暂存区或版本库中的文件"></a>删除暂存区或版本库中的文件</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 撤销错误添加到暂存区里的文件</span></span><br><span class="line">$ git rm --cache 文件名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除暂存区和工作区的文件</span></span><br><span class="line">$ git rm -f 文件名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除错误提交的commit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#仅仅只是撤销已提交的版本库，不会修改暂存区和工作区</span></span><br><span class="line">$ git reset --soft 版本库ID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅仅只是撤销已提交的版本库和暂存区，不会修改工作区</span></span><br><span class="line">$ git reset --mixed 版本库ID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 彻底将工作区、暂存区和版本库记录恢复到指定的版本库</span></span><br><span class="line">$ git reset --hard 版本库ID</span><br><span class="line"></span><br><span class="line"><span class="comment">#版本库I可以通过以下命令获取</span></span><br><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure></div><h2 id="拒绝合并无关历史"><a href="#拒绝合并无关历史" class="headerlink" title="拒绝合并无关历史"></a>拒绝合并无关历史</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br><span class="line"><span class="comment"># fatal: refusing to merge unrelated histories  *// 拒绝合并无关历史*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取时使用以下命令：</span></span><br><span class="line">$ git pull origin master --allow-unrelated-histories</span><br></pre></td></tr></table></figure></div><h2 id="本地更改将被合并覆盖"><a href="#本地更改将被合并覆盖" class="headerlink" title="本地更改将被合并覆盖"></a>本地更改将被合并覆盖</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Your local changes to the following files would be overwritten by merge *// 本地更改将被合并覆盖*</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法1：保留本地修改的代码，并把git服务器上的代码pull到本地</span></span><br><span class="line">$ git stash</span><br><span class="line">$ git pull origin master</span><br><span class="line">$ git stash pop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2、完全覆盖本地代码，只保留服务器端代码，则直接回退到上一个版本，再进行pull：</span></span><br><span class="line">$ git reset --hard</span><br><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>node创建web服务器测试打包文件</title>
      <link href="/node%E5%88%9B%E5%BB%BAweb%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B5%8B%E8%AF%95%E6%89%93%E5%8C%85%E6%96%87%E4%BB%B6.html"/>
      <url>/node%E5%88%9B%E5%BB%BAweb%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B5%8B%E8%AF%95%E6%89%93%E5%8C%85%E6%96%87%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<h2 id="新建一个-node-项目-并安装-express"><a href="#新建一个-node-项目-并安装-express" class="headerlink" title="新建一个 node 项目,并安装 express"></a>新建一个 node 项目,并安装 express</h2><p>新建一个 server 文件夹 , 在 server 目录打开控制台</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn init</span><br></pre></td></tr></table></figure></div><p>安装 express</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add express</span><br></pre></td></tr></table></figure></div><h2 id="将打包的-dist-文件夹复制到-server-文件夹中"><a href="#将打包的-dist-文件夹复制到-server-文件夹中" class="headerlink" title="将打包的 dist 文件夹复制到 server 文件夹中"></a>将打包的 dist 文件夹复制到 server 文件夹中</h2><h2 id="新建一个入口文件-app-js"><a href="#新建一个入口文件-app-js" class="headerlink" title="新建一个入口文件 app.js"></a>新建一个入口文件 app.js</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="comment">// 创建web服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 托管静态资源</span></span><br><span class="line">app.use(express.static(<span class="string">"./dist"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动web服务器</span></span><br><span class="line">app.listen(<span class="number">80</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"server running at http://127.0.0.1"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="运行-app-js"><a href="#运行-app-js" class="headerlink" title="运行 app.js"></a>运行 app.js</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node .\app.js</span><br></pre></td></tr></table></figure></div><h2 id="打开-127-0-0-1-就可以看到页面"><a href="#打开-127-0-0-1-就可以看到页面" class="headerlink" title="打开 127.0.0.1 就可以看到页面"></a>打开 127.0.0.1 就可以看到页面</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
